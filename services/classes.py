import sqlite3
import random
from io import BytesIO

import asyncpg
from aiogram.types import InputFile


class Pokemon:
    def __init__(self, description, types):
        self.id: int = description['pokemon_id']
        self.name: str = description['pokemon_name']
        self.type: str = description['name_type']
        self.hp: int = description['hp']
        self.attack: int = description['attack']
        self.defense: int = description['defense']
        self.superiority: list[str] = [i['name_type'] for i in types]

    def __str__(self):
        return self.name

    # def get_description(self, full=True):
    #     """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–∫–µ–º–æ–Ω–∞.
    #     –ê—Ç—Ä–∏–±—É—Ç full –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –∏–ª–∏ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è."""
    #
    #     # s = cur.execute(f'SELECT * FROM Pokemons WHERE Name = "{pokemon_name}"').fetchall()[0]
    #     if full:
    #         return self.image, f'<b>{self.description}</b>\n\n<b>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</b>\n' \
    #                            f'–ó–¥–æ—Ä–æ–≤—å–µ üíä - {self.hp}\n–ê—Ç–∞–∫–∞ ‚öî - {self.attack}\n' \
    #                            f'–ó–∞—â–∏—Ç–∞ üõ° - {self.defense}\n\n<b>–ò–º–µ–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–∞–¥ —Ç–∏–ø–∞–º–∏:</b>\n' \
    #                            f'{", ".join(self.superiority)}'
    #     else:
    #         return self.image, f'<b>{self.name}\n\n</b><b>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</b>\n' \
    #                            f'–ó–¥–æ—Ä–æ–≤—å–µ üíä - {self.hp}\n–ê—Ç–∞–∫–∞ ‚öî - {self.attack}\n' \
    #                            f'–ó–∞—â–∏—Ç–∞ üõ° - {self.defense}\n\n<b>–ò–º–µ–µ—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–∞–¥ —Ç–∏–ø–∞–º–∏:</b>\n' \
    #                            f'{", ".join(self.superiority)}'

    async def enhance(self, user_id, conn: asyncpg.connection.Connection):
        """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø–æ–∫–µ–º–æ–Ω–∞ –ø–æ—Å–ª–µ
        –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è '–µ–¥—ã –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è –ø–æ–∫–µ–º–æ–Ω–∞'"""

        self.hp += 10
        self.attack += 10
        self.defense += 10
        await conn.execute(f"UPDATE users SET eat = eat - 1 WHERE user_id = {user_id}")

        return self

    async def drop_energy(self, user_id, conn: asyncpg.connection.Connection):
        """–£–º–µ–Ω—å—à–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é –ø–æ–∫–µ–º–æ–Ω–∞"""

        await conn.execute('UPDATE users_pokemons SET energy = energy - 1 '
                           'WHERE user_id = $1 AND pokemon_id = $2', user_id, self.id)


class User:
    def __init__(self, user_id):
        self.user_id = user_id

    async def check_user(self, conn: asyncpg.connection.Connection) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""

        user = await conn.fetch(f'SELECT * FROM users WHERE user_id = {self.user_id}')
        return True if user else False

    async def add_user_in_db(self, username: str, conn: asyncpg.connection.Connection) -> None:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""

        await conn.execute(f"INSERT INTO users (user_id, username) VALUES ({self.user_id}, '{username}')")

    async def add_pokemon(self, pokemon: str, conn: asyncpg.connection.Connection) -> None:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–∫–µ–º–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""

        await conn.execute("INSERT INTO users_pokemons (user_id, pokemon_id) "
                           "VALUES($1, (SELECT pokemon_id FROM pokemons WHERE pokemon_name = $2))",
                           self.user_id, pokemon)

    async def count_pokemons(self, conn: asyncpg.connection.Connection) -> int:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª-–≤–æ –ø–æ–∫–µ–º–æ–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

        pokemons = await self.get_pokemons(conn)
        return len(pokemons) if pokemons else 0

    async def get_pokemons(self, conn: asyncpg.connection.Connection) -> list | None:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–∫–µ–º–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

        pokemons = await conn.fetch(f'SELECT pokemon_name FROM users_pokemons '
                                    f'JOIN pokemons USING(pokemon_id) WHERE user_id = {self.user_id}')
        if pokemons:
            return [i['pokemon_name'] for i in pokemons]

    async def get_backpack(self, conn: asyncpg.connection.Connection):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ä—é–∫–∑–∞–∫–∞"""

        result = await conn.fetchrow('SELECT coins, eat, evolution_stone FROM users WHERE user_id = $1', self.user_id)
        icons = '-'
        user_icons = await conn.fetch('SELECT name_icon FROM icons JOIN users_icons USING(icon_id) '
                                      'WHERE user_id = $1', self.user_id)
        if user_icons:
            icons = [f'- {icon["name_icon"]}' for icon in user_icons]
            icons = '\n'.join(icons)
        return result['coins'], result['eat'], result['evolution_stone'], icons

    async def replace_pokemon(self, user_pokemon: str, new_pokemon: str, conn: asyncpg.connection.Connection) -> None:
        """–ó–∞–º–µ–Ω—è–µ—Ç –æ–¥–Ω–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞ –Ω–∞ –¥—Ä—É–≥–æ–≥–æ –≤ —Å–ø–∏—Å–∫–µ –ø–æ–∫–µ–º–æ–Ω–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

        user_pokemon_id = await conn.fetchval('SELECT pokemon_id FROM pokemons WHERE pokemon_name = $1', user_pokemon)
        new_pokemon_id = await conn.fetchval('SELECT pokemon_id FROM pokemons WHERE pokemon_name = $1', new_pokemon)
        await conn.execute('UPDATE users_pokemons SET pokemon_id = $1 WHERE user_id = $2 AND pokemon_id = $3',
                           new_pokemon_id, self.user_id, user_pokemon_id)
